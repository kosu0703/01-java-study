package com.ict.day09;

public class Ex04 {
	//	멤버필드 인스턴스 변수
	String name = "홍길동";			//	배열은 같은 자료형만 저장할 수 있지만
	int kor = 80;					//	클래스는 다양한 정보를 저장할 수 있다.
	int eng = 95;					//	최종적인 목표는 클래스에 정보를 저장하고 
	int math = 85;					//	객체 생성을 통해 사용하는 것이다.
	int total = 0;
	
	//	멤버메서드() : 기능, 동작
	//	** 해당 메서드를 호출하면 실행 후 호출한 곳으로 되돌아 간다.
	
	//	메서드는 갔다가 일하고 항상 나한테 되돌아온다.
	//	되돌아 올때 무언가 가지고 오면 반환형이 있는 놈 , 아무것도 가지고 오지 않으면 반환형이 없는 놈
	
	//	메서드 형식 : [접근제한자][메서드종류] 반환형 메서드이름([인자]){ 실행 내용 }
	//				일반적으로 메서드종류는 생략된다.
	//				일반적으로 접근제한자는 public 을 사용한다.
	//				**반환형 : 호출한 곳으로 되돌아갈때 가지고 가는 데이터의 자료형 
	//						데이터가 없는 경우는 void 라는 예약어를 사용
	//				**반환형이 있는 메서드는 맨 마지막 줄에 return 예약어를 반드시 사용해야한다.
	
	
	//	멤버 메서드 인스턴스 메서드
	public void play01() {
		System.out.println("play01 메서드 시작");
		System.out.println(2);
		total = kor + eng + math ;		//	전역 변수 저장
		System.out.println(3);
		System.out.println("play01 메서드 끝");
		
		return;		//	원래 return 이 있는데 어차피 안가져가기 때문에 생략한다. 
	}				//	어차피 돌아가기 때문에 사용하더라도 오류가 안난다.
	
	
	public void play02() {
		int sum = kor + eng + math ;	//	지역 변수 저장
		
	}
	
	
	public int play03() {	//	반환형은 sum 의 자료형인 int
		int sum = kor + eng + math ;
		return sum; 		//	sum 을 가지고 되돌아 간다.
		
	}
	//	** void 가 아닌 메서드에는 맨 마지막 줄에 반드시 return 을 써줘야한다.
	
		
	//	**메서드 원칙
	
	//	1. void 면 (반환형이 없으면) 나한테 아무것도 안준다
	//	2. void 가 아니면 (반환형이 있으면) 나한테 주고 무조건 자료형에 맞게 저장해줘야한다.
	
	//	3. 반환형이 있으면 메서드의 맨 마지막 줄에 return 을 반드시 써줘야한다.	 
	//	4. return 뒤에는 가지고 가는 값을 적어주어야 한다.
	
	
	
}
