<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  
<mapper namespace="메퍼이름">											1개 일때는 VO 또는 String, int 등 사용가능
	<select id="외부에서 호출할때 사용할 id" resultType="결과 타입(VO 또는 int)" [parameterType="외부에서 들어오는 정보 타입"] >
		실제 사용할 쿼리 SQL 							 **List<VO> 는 없다	  **2개 이상 있으면 VO 에 담아서 보내자
	</select>															
	<insert id="" parameterType=""></insert>
	<update id="" parameterType=""></update>
	<delete id="" parameterMap=""></delete>
</mapper>
-->
<mapper namespace="customer">
	<select id="getSelectAll" resultType="com.ict.mybatis.Ex01_VO">
		select * from customer
	</select>
	<!-- 파라미터 1개를 String 으로 -->
	<select id="getSelectOne" resultType="com.ict.mybatis.Ex01_VO" parameterType="String">
		select * from customer where custid = #{custid}
	</select>
	<select id="getCount" resultType="int">
		select count(*) from customer
	</select>
	<insert id="getInsert" parameterType="com.ict.mybatis.Ex01_VO">
		insert into customer(custid, name, address, phone) 
		values(#{custid},#{name},#{address},#{phone})
	</insert>
	<!-- 파라미터 1개를 VO 로 -->
	<delete id="getDelete" parameterType="com.ict.mybatis.Ex01_VO">
		delete from customer 
		where custid = #{custid}
	</delete>
	<update id="getUpdate" parameterType="com.ict.mybatis.Ex01_VO">
		update customer 
		set name = #{name}, address = #{address}, phone = #{phone} 
		where custid = #{custid}
	</update>
</mapper>











